x + y
add2(4, 5)
add2 <- function(x, y){
x + y
}
add2(4, 5)
install.packages('swirl')
library('swirl')
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[, 11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[, 19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
length(unique_vals)
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
bye
bye
bye()
library(datasets)
data(iris)
?iris
sapply(iris$Sepal.Length, mean)
sapply(iris, mean)
length(sapply(iris$Sepal.Length, mean))
sapply(iris$Species, unique)
tapply(iris$Sepal.Length, iris$Species='virginica', mean)
tapply(iris$Sepal.Length, iris[, 101:], mean)
virginica_data <- iris[, 101:]
tapply(iris$Sepal.Length, iris[, 101:150], mean)
tapply(iris$Sepal.Length, iris[101:], mean)
iris[, 101:150]
iris[101:150]
iris[101:150,]
tapply(iris$Sepal.Length, iris[101:150,], mean)
?tappply
?tapply
virginica_data <- iris[, 101:]
virginica_data <- iris[101:,]
virginica_data <- iris[101:150, ]
virginica_data
sapply(virginica_data$Sepal.Length, mean)
?sapply
sapply(virginica_data, mean)
?rowMeans
sapply(iris, mean)
class(sapply(iris, mean))
rowMeans(iris[, 1:4])
apply(iris, 2, mean)
colMeans(iris)
apply(iris[, 1:4], 1, mean)
apply(iris, 1, mean)
apply(iris[, 1:4], 2, mean)
data("mtcars")
?mtcars
sapply(mtcars$cyl, mean)
length(sapply(mtcars$cyl, mean))
x <- split(mtcars$mpg, mtcars$cyl)
x
length(x)
length(x[4])
class(x)
class(x[1])
length(x[1:3])
length(x[1:3, ])
sapply(split(mtcars$mpg, mtcars$cyl), mean)
lapply(mtcars, mean)
tapply(mtcars$mpg, mtcars$cyl, mean)
?with
with(mtcars, tapply(mpg, cyl, mean))
mean(mtcars$mpg, mtcars$cyl)
apply(mtcars, 2, mean)
?apply
sapply(mtcars, cyl, mean)
tapply(mtcars$cyl, mtcars$mpg, mean)
?mtcars
tapply(mtcars$hp, mtcars$cyl, mean)
209.21429 - 82.63636
debug(ls)
ls(x, y)
matrix
matrix(1:4, 2, 2)
x <- matrix(1:4, 2, 2)
x
class(x)
solve
?solve
solve(x)
source('Cachepractice.R')
getwd()
setwd('/Users/ClarkPorter/Desktop/Coursera/RProgramming')
getwd()
setwd('/Users/ClarkPorter/Desktop/Coursera/RProgramming/programmingassignment2/ProgrammingAssignment2')
getwd()
source('Cachepractice.R')
x
cachesolve(x)
makeCacheMatrix(x)
cacheSolve(x)
class(x)
source('Cachepractice.R')
makeCacheMatrix(x)
source('Cachepractice.R)
''
}
source('Cachepractice.R')
source('Cachepractice.R')
makeCacheMatrix(x)
View(x)
